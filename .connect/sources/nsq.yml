model_version: '1'
kind: source
label: NSQ
name: nsq
status: preview
description: |-
  Subscribe to an NSQ instance topic and channel.

  The following metadata fields are added to each message:

  - nsq_attempts
  - nsq_id
  - nsq_nsqd_address
  - nsq_timestamp
  
fields:
  - path: nsqd_tcp_addresses
    name: nsqd_tcp_addresses
    label: NSQD TCP Addresses
    kind: list
    type: string
    optional: false
    description: |-
      A list of nsqd addresses to connect to.
  - path: lookupd_http_addresses
    name: lookupd_http_addresses
    label: lookupd_http_addresses
    kind: list
    type: string
    optional: false
    description: |-
      A list of nsqlookupd addresses to connect to.
  - path: tls
    name: tls
    label: TLS Configuration
    type: object
    optional: false
    description: |-
      Custom TLS settings can be used to override system defaults.
    fields:
      - path: tls.enabled
        name: enabled
        label: Enabled
        type: bool
        default: 'false'
        optional: true
        description: |-
          Whether custom TLS settings are enabled.

      - path: tls.skip_cert_verify
        name: skip_cert_verify
        label: Skip Certificate Verification
        type: bool
        default: 'false'
        optional: true
        description: |-
          Whether to skip server side certificate verification.

      - path: tls.enable_renegotiation
        name: enable_renegotiation
        label: Enable Renegotiation
        type: bool
        default: 'false'
        optional: true
        description: |-
          Whether to allow the remote server to repeatedly request renegotiation. 
          Enable this option if you're seeing the error message `local error: tls: no renegotiation`.

      - path: tls.root_cas
        name: root_cas
        label: Root Certificate Authority
        type: string
        default: '""'
        optional: true
        examples:
          - '-----BEGIN CERTIFICATE-----
              ...
              -----END CERTIFICATE-----'
        secret: true
        description: |-
          An optional root certificate authority to use. 
          This is a string, representing a certificate chain from the parent trusted root certificate, 
          to possible intermediate signing certificates, to the host certificate.

      - path: tls.client_certs
        name: client_certs
        label: Client Certificates
        kind: list
        type: object
        default: '[]'
        optional: true
        examples:
          - - cert: foo
              key: bar
        description: |-
          A list of client certificates to use. 
        fields:
          - path: tls.client_certs[].cert
            name: cert
            label: Certificate
            type: string
            default: '""'
            optional: true
            description: |-
              A plain text certificate to use.

          - label: Key
            name: key
            path: tls.client_certs[].key
            type: string
            default: '""'
            optional: true
            secret: true
            description: |-
              A plain text certificate key to use.

          - path: tls.client_certs[].password
            name: password
            label: Password
            type: string
            default: '""'
            optional: true
            examples:
              - foo
              - ${KEY_PASSWORD}
            secret: true
            description: |-
              A plain text password for when the private key is password encrypted in PKCS#1 or 
              PKCS#8 format. The obsolete `pbeWithMD5AndDES-CBC` algorithm is not supported 
              for the PKCS#8 format.

              Because the obsolete pbeWithMD5AndDES-CBC algorithm does not authenticate the 
              ciphertext, it is vulnerable to padding oracle attacks that can let an attacker 
              recover the plaintext.
  
  - path: topic
    name: topic
    label: Topic
    kind: scalar
    type: string
    optional: false
    description: |-
      The topic to consume from.
  - path: channel
    name: channel
    label: Channel
    kind: scalar
    type: string
    optional: false
    description: |-
      The channel to consume from.
  - path: user_agent
    name: user_agent
    label: User Agent
    kind: scalar
    type: string
    optional: false
    description: |-
      A user agent to assume when connecting.
  - path: max_in_flight
    name: max_in_flight
    label: Max In Flight
    kind: scalar
    type: int
    default: '100'
    optional: true
    description: |-
      The maximum number of pending messages to consume at any given time.
  - path: max_attempts
    name: max_attempts
    label: max_attempts
    kind: scalar
    type: int
    default: '5'
    optional: true
    description: |-
      The maximum number of attempts to successfully consume a messages.
