model_version: "1"
name: aws_dynamodb
label: AWS DynamoDB
kind: sink
status: stable
description: >-
  Inserts items into a DynamoDB table.
fields:
  - path: table
    name: table
    label: Table
    type: string
    description: >-
      The table to store messages in.

  - path: string_columns
    name: string_columns
    label: String Columns
    type: expression
    kind: map
    description: >-
      A map of column keys to string values to store.
    examples:
      - full_content: "${!content()}"
        id: ${!json("id")}
        title: ${!json("body.title")}
        topic: ${!meta("kafka_topic")}

  - path: json_map_columns
    name: json_map_columns
    label: Json Map Columns
    type: string
    kind: map
    description: >-
      A map of column keys to field paths pointing to value data within messages.
    examples:
      - user: path.to.user
        whole_document: "."
      - '': "."

  - path: ttl
    name: ttl
    label: TTL
    type: string
    optional: true
    description: >-
      An optional TTL to set for items, calculated from the moment the message is sent.

  - path: ttl_key
    name: ttl_key
    label: TTL Key
    type: string
    optional: true
    description: >-
      The column key to place the TTL value within.

  - path: max_in_flight
    name: max_in_flight
    label: Max in Flight
    type: int
    optional: true
    default: 64
    description: >-
      The maximum number of parallel message batches to have in flight at
      any given time.

  - path: batching
    name: batching
    label: Batching
    type: object
    optional: true
    description: >-
      Allows you to configure a batching policy.
    examples:
      - byte_size: 5000
        count: 0
        period: 1s
      - count: 10
        period: 1s
      - check: this.contains("END BATCH")
        count: 0
        period: 1m
    fields:
      - path: batching.count
        name: count
        label: Count
        type: int
        optional: true
        description: >-
          A number of messages at which the batch should be flushed. If `0`
          disables count based batching.
      - path: batching.byte_size
        name: byte_size
        label: Byte Size
        type: int
        optional: true
        description: >-
          An amount of bytes at which the batch should be flushed. If `0` disables
          size based batching.
      - path: batching.period
        name: period
        label: Period
        type: string
        render_hint: duration
        optional: true
        description: >-
          A period in which an incomplete batch should be flushed regardless
          of its size.
        examples:
          - "1s"
          - "1m"
          - "500ms"
      - path: batching.check
        name: check
        label: Check
        type: condition
        optional: true
        description: >-
          A Bloblang query that should return a boolean value indicating whether a message should end a batch.
        examples:
          - this.type == "end_of_transaction"

  - path: region
    name: region
    label: Region
    type: string
    description: >-
      The AWS region to target.

  - path: endpoint
    name: endpoint
    label: Endpoint
    type: string
    optional: true
    default: ""
    description: >-
      Allows you to specify a custom endpoint for the AWS API.
  - path: credentials
    name: credentials
    label: Credentials
    type: object
    description: >-
      Optional manual configuration of AWS credentials to use. More information
      can be found in xref:guides:cloud/aws.adoc[].
    fields:
      - path: credentials.profile
        name: profile
        label: Profile
        type: string
        optional: true
        default: ""
        description: >-
          A profile from `~/.aws/credentials` to use.
      - path: credentials.id
        name: id
        label: ID
        type: string
        optional: true
        default: ""
        description: >-
          The ID of credentials to use.
      - path: credentials.secret
        name: secret
        label: Secret
        type: string
        optional: true
        default: ""
        description: >-
          The secret for the credentials being used.
      - path: credentials.token
        name: token
        label: Token
        type: string
        optional: true
        default: ""
        description: >-
          The token for the credentials being used, required when using short
          term credentials.
      - path: credentials.from_ec2_role
        name: from_ec2_role
        label: From EC2 Role
        type: bool
        optional: true
        default: ""
        description: >-
          Use the credentials of a host EC2 machine configured to assume https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html[an
          IAM role associated with the instance^].
      - path: credentials.role
        name: role
        label: Role
        type: string
        optional: true
        default: ""
        description: >-
          A role ARN to assume.
      - path: credentials.role_external_id
        name: role_external_id
        label: Role External ID
        type: string
        optional: true
        default: ""
        description: >-
          An external ID to provide when assuming a role.


  - path: max_retries
    name: max_retries
    label: Max Retries
    type: int
    default: 0
    optional: true
    description: >-
      The maximum number of retries before giving up on the request. If set
      to zero there is no discrete limit.

  - path: backoff
    name: backoff
    label: Backoff
    type: object
    optional: true
    description: >-
      Control time intervals between retry attempts.
    fields:
      - path: backoff.initial_interval
        name: initial_interval
        label: Initial Interval
        type: string
        optional: true
        description: >-
          The initial period to wait between retry attempts.
      - path: backoff.max_interval
        name: max_interval
        label: Max Interval
        type: string
        optional: true
        description: >-
          The maximum period to wait between retry attempts.
      - path: backoff.max_elapsed_time
        name: max_elapsed_time
        label: Max Elapsed Time
        type: string
        optional: true
        description: >-
          The maximum period to wait before retry attempts are abandoned. If
          zero then no limit is used.

